package org.mpei.C37_118_2011_ALL_FRAME.frame.lowFrame;

import lombok.Getter;
import lombok.Setter;

@Setter
@Getter
/**---------------------------------------------------------------------------------------------------------------------
 * Класс определяющий структуру кадра Command protocol IEEE C37.118-2011------------------------------------------------
 * ---------------------------------------------------------------------------------------------------------------------
 * */
public class Frame_Command_IEEE_C37_118_2011 {
    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Команда----------------------------------------------------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private short command;                                                                             //Размер: 2 байта

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Метод для представления информации в человекочитаемом виде-------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    @Override
    public String toString() {
        return "\t\tFrame Command [IEEE_C37_118_2011] {" + "\n" +
                "\t\t\tcommand: " + addZero(Integer.toBinaryString(command), 16) + "\n" +
                "\t\t\tЗначение: " + recognition() + "\n" +
                "\t\t}";
    }

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Метод по добавлению нулей в бинарное представление числа---------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    public static String addZero(String bits, int sizeByte) {
        if (bits.length() < sizeByte) {
            StringBuilder strBuilder = new StringBuilder(bits);
            for (int i = 0; i < sizeByte - bits.length(); i++) {
                strBuilder.insert(0, "0");
            }
            return strBuilder.toString();
        } else {
            return bits;
        }
    }

    public String recognition() {
        String command = addZero(Integer.toBinaryString(this.command), 16);
        switch (command) {
            case ("0000000000000001"):
                command = "Отключите передачу фреймов данных";
                break;
            case ("0000000000000010"):
                command = "Включите передачу фреймов данных";
                break;
            case ("0000000000000011"):
                command = "Отправьте HDR-кадр";
                break;
            case ("0000000000000100"):
                command = "Отправьте кадр CFG-1";
                break;
            case ("0000000000000101"):
                command = "Отправьте кадр CFG-2";
                break;
            case ("0000000000000110"):
                command = "Отправьте кадр CFG-3";
                break;
            case ("0000000000001000"):
                command = "Удлиненный кадр (расширенный кадр)";
                break;
            default:
                command = "Error";
                break;
        }

        return command;
    }
}

package org.mpei.C37_118_2011_4PMU.dataPacket;

import lombok.Getter;
import lombok.Setter;

import java.util.ArrayList;
import java.util.Date;

@Setter
@Getter
/**---------------------------------------------------------------------------------------------------------------------
 * Класс, содержащий поля, отображающие структуру кадра Data протокола C37.118-2011------------------------------------
 * -------------------------------------------------------------------------------------------------------------------*/
public class DataFrame_IEEE_C37_118_2011 {
    /**---------------------------------------------------------------------------------------------------------------*/
    /**
     * Synchronization word - байты синхронизации. Состоит из байта синхронизации и байта, определяющего типа-----------
     * -----------------------------------------------------------------------------------------------------------------
     * Бит 7: зарезервирован, должен быть 0;
     * Биты 6-4:
     * - 000: кадр данных;
     * - 001: кадр заголовка;
     * - 010: кадр конфигурации (CFG-1);
     * - 011: кадр конфигурации (CFG-2);
     * - 101: кадр конфигурации (CFG-3);
     * - 100: кадр команды;
     * Биты 3-0:
     * - 0001: Версия кадров IEEE Std C37.118-2005;
     * - 0010: Версия кадров IEEE Std C37.118.2-2011;
     */
    private String synchronizationWord;                                                                //Размер: 2 байта

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Framesize - количество байт в кадре, включая CHK-----------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private short frameSize;                                                                           //Размер: 2 байта

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * PMU/DC ID number (IDCode) - это идентификационный номер потока данных. Для кадра конфигурации, определяет--------
     * исходный поток данных--------------------------------------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private short pmuDcIdNumber;                                                                       //Размер: 2 байта

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * SOC (Second 0f century) - содержит целое число секунд от начала эпохи UNIX---------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private Date SOC;                                                                                  //Размер: 4 байта


    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Time quality flag - флаг качества времени------------------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private int timeQualityFlag;                                                                       //Размер: 1 байта


    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Fraction of second (Fracsec) - доли секунды----------------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private int fractionOfSecond;                                                                      //Размер: 3 байта

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Массив для PMU блоков.-------------------------------------------------------------------------------------------
     * Каждый PMU блок содержит свои внутренний поля--------------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private ArrayList<PMU_IEEE_C37_118_2011> pmuIEEE_C37_118_2011 = new ArrayList<PMU_IEEE_C37_118_2011>() {
    };                                                                                             //Размер: варьируемый

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Check sum - контрольная сумма для проверки целостности пакета----------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    private String checkSum;                                                                           //Размер: 2 байта

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Конструктор:-----------------------------------------------------------------------------------------------------
     * - Заполняет массив PMU-классами;---------------------------------------------------------------------------------
     * - Задает начальные значения для полей строкового типа;-----------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    public DataFrame_IEEE_C37_118_2011(int phasor, int analog) {
        this.synchronizationWord = "0";
        this.checkSum = "0";
        for (int i = 0; i < 4; i++) {
            this.pmuIEEE_C37_118_2011.add(new PMU_IEEE_C37_118_2011(phasor, analog));
        }
    }

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Метод для вывода всех полей в человекочитаемом виде--------------------------------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    @Override
    public String toString() {
        return "\tDataFrame_IEEE_C37_118_2011 {" + '\n' +
                "\t\tSynchronization word: 0x" + Integer.toHexString(Integer.parseInt(synchronizationWord)) + '\n' +
                "\t\tFramesize: " + frameSize + " (byte)" + '\n' +
                "\t\tPMU/DC ID number: " + pmuDcIdNumber + '\n' +
                "\t\tSOC time stamp: " + SOC + '\n' +
                "\t\tTime quality flag: " + timeQualityFlag + '\n' +
                "\t\tFraction of second: " + fractionOfSecond + '\n' +
                "\t\tPMU: " + '\n' +
                toStringPMUArray() + '\n' +
                "\t\tCheck sum: 0x" + Integer.toHexString(Integer.parseInt(checkSum)) + '\n' +
                "\t" + '}';
    }

    /**
     * -----------------------------------------------------------------------------------------------------------------
     * Дополнительный метод, для корректного вывода вложенной структуры (PMU блоков)------------------------------------
     * -----------------------------------------------------------------------------------------------------------------
     */
    public String toStringPMUArray() {
        StringBuilder stringPMU = new StringBuilder();
        for (int i = 0; i < pmuIEEE_C37_118_2011.size(); i++) {
            stringPMU.append("\t").append(i + 1).append(" ").append(pmuIEEE_C37_118_2011.get(i).toString());
        }
        return stringPMU.toString();
    }
}
